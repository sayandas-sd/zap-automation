// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          Int         @id @default(autoincrement())
  name        String
  email       String
  password    String
  task        Task[]
}

model Task {
  id          String      @id @default(uuid())
  triggerId   String
  userId      Int
  trigger     Trigger?  
  action      Action[]
  taskRun     TaskRun[]
  user        User        @relation(fields: [userId], references: [id])
}
 
model Trigger {
  id            String             @id @default(uuid())
  triggerId     String
  metadata      Json               @default("{}")
  type          AvailableTrigger   @relation(fields: [triggerId], references: [id])
  TaskId        String             @unique
  task          Task               @relation(fields: [TaskId], references: [id])
}

model AvailableTrigger {
  id        String      @id @default(uuid())
  name      String
  image     String
  triggers  Trigger[]
}

 
model Action {
  id            String             @id @default(uuid())
  actionId      String
  metadata      Json               @default("{}")
  type          AvailableAction    @relation(fields: [actionId], references: [id])
  TaskId        String             @unique
  task          Task               @relation(fields: [TaskId], references: [id])
  sortingOrder  Int                @default(0)
  
}

model AvailableAction {
  id        String      @id @default(uuid())
  name      String
  image     String
  actions   Action[]
}

model TaskRun {
  id            String        @id @default(uuid())
  taskId        String
  metadata      Json
  task          Task          @relation(fields: [taskId], references: [id])
  taskRunout    TaskRunOut?
}


model TaskRunOut {
  id          String    @id @default(uuid())
  taskRunId   String    @unique
  taskRun     TaskRun   @relation(fields: [taskRunId], references: [id])
}

